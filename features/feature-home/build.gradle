plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion AndroidSdk.compile

    defaultConfig {
        minSdkVersion AndroidSdk.min
        targetSdkVersion AndroidSdk.target
        versionCode AndroidClient.versionCode
        versionName AndroidClient.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        // TODO: When using this OptIn annotation, make sure that
        //  in your app's build.gradle file you have
        //  freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"] in your kotlinOptions.
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(':core')
    implementation project(':core-domain')
    implementation project(':moviedb-api')
    implementation project(':data')

    implementation Libraries.coreKtx
    implementation Libraries.appCompat
    implementation Libraries.material
    implementation Libraries.fragmentKtx
    implementation Libraries.paging
    implementation Libraries.pagingRxJava
    implementation Libraries.swipeRefreshLayout

    implementation Libraries.roomRuntime

    implementation Libraries.dagger
    kapt Libraries.daggerCompiler

    implementation Libraries.rxJava
    implementation Libraries.rxAndroid

    implementation Libraries.glide
    kapt Libraries.glideCompiler

    testImplementation TestLibraries.junit
    androidTestImplementation TestLibraries.extJunit
    androidTestImplementation TestLibraries.espressoCore
}